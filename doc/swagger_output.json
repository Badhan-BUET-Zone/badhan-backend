{
  "swagger": "2.0",
  "info": {
    "version": "3.0.0",
    "title": "Badhan API",
    "description": "Automatically generated documentation of Badhan API. The backend is documented and currently maintained by Sumaiya Azad"
  },
  "host": "badhan-web.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Authentication Endpoints"
    },
    {
      "name": "Donors",
      "description": "Routes to handle donors"
    },
    {
      "name": "Deprecated",
      "description": "These routes will be deleted later"
    },
    {
      "name": "Logs",
      "description": "Fetch statistics about backend"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-auth",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/donor/insert": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "handles the insertion of a new donor into the database.",
        "parameters": [
          {
            "name": "insertDonor",
            "in": "body",
            "description": "donor info for inserting donor",
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "number",
                  "example": 8801521438557
                },
                "bloodGroup": {
                  "type": "number",
                  "example": 2
                },
                "hall": {
                  "type": "number",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "example": "Mir Mahathir Mohammad"
                },
                "studentId": {
                  "type": "number",
                  "example": 1605011
                },
                "address": {
                  "type": "string",
                  "example": "Azimpur"
                },
                "roomNumber": {
                  "type": "string",
                  "example": "3009"
                },
                "comment": {
                  "type": "string",
                  "example": "developer of badhan"
                },
                "extraDonationCount": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful donor insertion",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "New donor inserted successfully"
                },
                "newDonor": {
                  "type": "string",
                  "example": "new donor data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "If the donor with same phone number already exists in the database with another hall name, user will get the error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "New donor insertion unsuccessful"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If the donor with same phone number already exists in the database with another hall name, user will get the error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donor found with duplicate phone number in another hall"
                },
                "donor": {
                  "type": "string",
                  "example": "this field will return null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "If the donor already exists in the database, user will get the error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donor found with duplicate phone number"
                },
                "donor": {
                  "type": "string",
                  "example": "donor array"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, the user will get this message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/donors": {
      "post": {
        "tags": [
          "Donors"
        ],
        "description": "handles the insertion of a new donor into the database.",
        "parameters": [
          {
            "name": "insertDonor",
            "in": "body",
            "description": "donor info for inserting donor",
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "number",
                  "example": 8801521438557
                },
                "bloodGroup": {
                  "type": "number",
                  "example": 2
                },
                "hall": {
                  "type": "number",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "example": "Mir Mahathir Mohammad"
                },
                "studentId": {
                  "type": "number",
                  "example": 1605011
                },
                "address": {
                  "type": "string",
                  "example": "Azimpur"
                },
                "roomNumber": {
                  "type": "string",
                  "example": "3009"
                },
                "comment": {
                  "type": "string",
                  "example": "developer of badhan"
                },
                "extraDonationCount": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful donor insertion",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "New donor inserted successfully"
                },
                "newDonor": {
                  "type": "string",
                  "example": "new donor data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "If the donor with same phone number already exists in the database with another hall name, user will get the error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "New donor insertion unsuccessful"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If the donor with same phone number already exists in the database with another hall name, user will get the error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donor found with duplicate phone number in another hall"
                },
                "donor": {
                  "type": "string",
                  "example": "this field will return null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "If the donor already exists in the database, user will get the error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donor found with duplicate phone number"
                },
                "donor": {
                  "type": "string",
                  "example": "donor array"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, the user will get this message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Donors"
        ],
        "description": "handles the fetching of donor details.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string",
            "description": "Donor id for donor details"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "example": "any"
                },
                "donorId\r": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "donor info",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully fetched donor details"
                },
                "donor": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "abjcguiwefvew"
                    },
                    "phone": {
                      "type": "number",
                      "example": 8801521438557
                    },
                    "name": {
                      "type": "string",
                      "example": "Mir Mahathir Mohammad"
                    },
                    "studentId": {
                      "type": "number",
                      "example": 1605011
                    },
                    "lastDonation": {
                      "type": "number",
                      "example": 987876287160
                    },
                    "bloodGroup": {
                      "type": "number",
                      "example": 2
                    },
                    "hall": {
                      "type": "number",
                      "example": 5
                    },
                    "roomNumber": {
                      "type": "string",
                      "example": "3009"
                    },
                    "address": {
                      "type": "string",
                      "example": "Azimpur"
                    },
                    "comment": {
                      "type": "string",
                      "example": "developer of badhan"
                    },
                    "designation": {
                      "type": "number",
                      "example": 3
                    },
                    "donationCount": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Donors"
        ],
        "description": "Handles the update of donor information.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "editDonor",
            "in": "body",
            "description": "donor info for editing donor",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "ghjdgejhd7623jhs"
                },
                "newName": {
                  "type": "string",
                  "example": "Mir Mahathir Mohammad"
                },
                "newPhone": {
                  "type": "number",
                  "example": 8801521438557
                },
                "newStudentId": {
                  "type": "number",
                  "example": 1605011
                },
                "newBloodGroup": {
                  "type": "number",
                  "example": 2
                },
                "newHall": {
                  "type": "number",
                  "example": 3
                },
                "newRoomNumber": {
                  "type": "string",
                  "example": "3009"
                },
                "newAddress": {
                  "type": "string",
                  "example": "Azimpur"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donor info update successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donor updated successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Donor info update unsuccessful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "User is below the target donor by designation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "User does not have permission to edit"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Donors"
        ],
        "description": "handles the deletion of an existing donor from the database.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "deleteDonor",
            "in": "body",
            "description": "donor info for deleting donor",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hgjgkdse7823"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful donor deletion",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donor deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This middleware is used to block the manipulation of data of a member with higher designation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You cannot modify the details of a Badhan member with higher designation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Error occured when deleting target donor",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Error occurred in deleting target donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v3/donor/details": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "description": "handles the fetching of donor details.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string",
            "description": "Donor id for donor details"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "example": "any"
                },
                "donorId\r": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "donor info",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully fetched donor details"
                },
                "donor": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "abjcguiwefvew"
                    },
                    "phone": {
                      "type": "number",
                      "example": 8801521438557
                    },
                    "name": {
                      "type": "string",
                      "example": "Mir Mahathir Mohammad"
                    },
                    "studentId": {
                      "type": "number",
                      "example": 1605011
                    },
                    "lastDonation": {
                      "type": "number",
                      "example": 987876287160
                    },
                    "bloodGroup": {
                      "type": "number",
                      "example": 2
                    },
                    "hall": {
                      "type": "number",
                      "example": 5
                    },
                    "roomNumber": {
                      "type": "string",
                      "example": "3009"
                    },
                    "address": {
                      "type": "string",
                      "example": "Azimpur"
                    },
                    "comment": {
                      "type": "string",
                      "example": "developer of badhan"
                    },
                    "designation": {
                      "type": "number",
                      "example": 3
                    },
                    "donationCount": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donor/details": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "donorId\r": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donor/details/self": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Handles the fetching of own details.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Info of the logged in user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully fetched donor details"
                },
                "donor": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "abjcguiwefvew"
                    },
                    "phone": {
                      "type": "number",
                      "example": 8801521438557
                    },
                    "name": {
                      "type": "string",
                      "example": "Mir Mahathir Mohammad"
                    },
                    "studentId": {
                      "type": "number",
                      "example": 1605011
                    },
                    "lastDonation": {
                      "type": "number",
                      "example": 987876287160
                    },
                    "bloodGroup": {
                      "type": "number",
                      "example": 2
                    },
                    "hall": {
                      "type": "number",
                      "example": 5
                    },
                    "roomNumber": {
                      "type": "string",
                      "example": "3009"
                    },
                    "address": {
                      "type": "string",
                      "example": "Azimpur"
                    },
                    "comment": {
                      "type": "string",
                      "example": "Developer of badhan"
                    },
                    "designation": {
                      "type": "number",
                      "example": 3
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No donor found that matches the token",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, the user will get this message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/donors/me": {
      "get": {
        "tags": [
          "Donors"
        ],
        "description": "Handles the fetching of own details.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Info of the logged in user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully fetched donor details"
                },
                "donor": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "abjcguiwefvew"
                    },
                    "phone": {
                      "type": "number",
                      "example": 8801521438557
                    },
                    "name": {
                      "type": "string",
                      "example": "Mir Mahathir Mohammad"
                    },
                    "studentId": {
                      "type": "number",
                      "example": 1605011
                    },
                    "lastDonation": {
                      "type": "number",
                      "example": 987876287160
                    },
                    "bloodGroup": {
                      "type": "number",
                      "example": 2
                    },
                    "hall": {
                      "type": "number",
                      "example": 5
                    },
                    "roomNumber": {
                      "type": "string",
                      "example": "3009"
                    },
                    "address": {
                      "type": "string",
                      "example": "Azimpur"
                    },
                    "comment": {
                      "type": "string",
                      "example": "Developer of badhan"
                    },
                    "designation": {
                      "type": "number",
                      "example": 3
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "No donor found that matches the token",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, the user will get this message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donor/search": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Searches for donors that matches the filters",
        "parameters": [
          {
            "name": "SearchDonor",
            "in": "body",
            "description": "Filter parameters",
            "schema": {
              "type": "object",
              "properties": {
                "bloodGroup": {
                  "type": "number",
                  "example": 2
                },
                "hall": {
                  "type": "number",
                  "example": 5
                },
                "batch": {
                  "type": "number",
                  "example": 16
                },
                "name": {
                  "type": "string",
                  "example": "Mir Mahathir Mohammad"
                },
                "address": {
                  "type": "string",
                  "example": "Azimpur"
                },
                "isAvailable": {
                  "type": "boolean",
                  "example": true
                },
                "isNotAvailable": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of donors that matches the filter parameters",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donors queried successfully"
                },
                "filteredDonors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "abjcguiwefvew"
                      },
                      "phone": {
                        "type": "number",
                        "example": 8801521438557
                      },
                      "name": {
                        "type": "string",
                        "example": "Mir Mahathir Mohammad"
                      },
                      "studentId": {
                        "type": "number",
                        "example": 1605011
                      },
                      "lastDonation": {
                        "type": "number",
                        "example": 987876287160
                      },
                      "bloodGroup": {
                        "type": "number",
                        "example": 2
                      },
                      "hall": {
                        "type": "number",
                        "example": 5
                      },
                      "roomNumber": {
                        "type": "string",
                        "example": "3009"
                      },
                      "address": {
                        "type": "string",
                        "example": "Azimpur"
                      },
                      "comment": {
                        "type": "string",
                        "example": "developer of badhan"
                      },
                      "designation": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Filtering donors has been unsuccessful.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donor query unsuccessful"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "Donors"
        ],
        "description": "Searches for donors that matches the filters",
        "parameters": [
          {
            "name": "bloodGroup",
            "description": "blood group for donors",
            "type": "number",
            "in": "query"
          },
          {
            "name": "hall",
            "description": "hall for donors",
            "type": "number",
            "in": "query"
          },
          {
            "name": "batch",
            "description": "batch for donors",
            "type": "number",
            "in": "query"
          },
          {
            "name": "address",
            "description": "address for donors",
            "type": "string",
            "in": "query"
          },
          {
            "name": "isAvailable",
            "description": "isAvailable for donors",
            "type": "boolean",
            "in": "query"
          },
          {
            "name": "isNotAvailable",
            "description": "isNotAvailable for donors",
            "type": "boolean",
            "in": "query"
          },
          {
            "name": "searchDonors",
            "in": "body",
            "description": "Filter parameters",
            "schema": {
              "type": "object",
              "properties": {
                "bloodGroup": {
                  "type": "number",
                  "example": 2
                },
                "hall": {
                  "type": "number",
                  "example": 5
                },
                "batch": {
                  "type": "number",
                  "example": 16
                },
                "name": {
                  "type": "string",
                  "example": "Mir Mahathir Mohammad"
                },
                "address": {
                  "type": "string",
                  "example": "Azimpur"
                },
                "isAvailable": {
                  "type": "boolean",
                  "example": true
                },
                "isNotAvailable": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of donors that matches the filter parameters",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donors queried successfully"
                },
                "filteredDonors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "abjcguiwefvew"
                      },
                      "phone": {
                        "type": "number",
                        "example": 8801521438557
                      },
                      "name": {
                        "type": "string",
                        "example": "Mir Mahathir Mohammad"
                      },
                      "studentId": {
                        "type": "number",
                        "example": 1605011
                      },
                      "lastDonation": {
                        "type": "number",
                        "example": 987876287160
                      },
                      "bloodGroup": {
                        "type": "number",
                        "example": 2
                      },
                      "hall": {
                        "type": "number",
                        "example": 5
                      },
                      "roomNumber": {
                        "type": "string",
                        "example": "3009"
                      },
                      "address": {
                        "type": "string",
                        "example": "Azimpur"
                      },
                      "comment": {
                        "type": "string",
                        "example": "developer of badhan"
                      },
                      "designation": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Filtering donors has been unsuccessful.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donor query unsuccessful"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donor/donations": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "handles the retrieval of donation history for a particular donor.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "seeHistory",
            "in": "body",
            "description": "donor info for inserting donor",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "bhjdekj8923"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volunteer list fetch successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully fetched donor details"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Error happened when trying to find the donations",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/donations": {
      "get": {
        "tags": [
          "Donations"
        ],
        "description": "handles the retrieval of donation history for a particular donor.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string",
            "description": "donor info for donations"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "example": "any"
                },
                "donorId\r": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volunteer list fetch successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully fetched donor details"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Error happened when trying to find the donations",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Donations"
        ],
        "description": "Endpoint to insert a donation date for a donor",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "insertDonation",
            "in": "body",
            "description": "Donor info for inserting donation",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "bhjdekj8923"
                },
                "date": {
                  "type": "number",
                  "example": 1611100800000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation insertion successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donation inserted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Donation insertion unsuccessful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Donations"
        ],
        "description": "handles the deletion of a donation for a donor.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "deleteDonation",
            "in": "body",
            "description": "donor info for deleting donation",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "bhjdekj8923"
                },
                "date": {
                  "type": "number",
                  "example": 1611100800000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation deletion successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully deleted donation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Donation deleted but donor profile not updated concurrently. Inconsistent state reached.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donation deleted but donor profile not updated concurrently. Inconsistent state reached."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donation/insert": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Endpoint to insert a donation date for a donor",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "insertDonation",
            "in": "body",
            "description": "Donor info for inserting donation",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "bhjdekj8923"
                },
                "date": {
                  "type": "number",
                  "example": 1611100800000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation insertion successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donation inserted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Donation insertion unsuccessful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donation/delete": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "handles the deletion of a donation for a donor.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "deleteDonation",
            "in": "body",
            "description": "donor info for deleting donation",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "bhjdekj8923"
                },
                "date": {
                  "type": "number",
                  "example": 1611100800000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation deletion successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully deleted donation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Donation deleted but donor profile not updated concurrently. Inconsistent state reached.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Donation deleted but donor profile not updated concurrently. Inconsistent state reached."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donor/comment": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Adds a comment to a donor",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "insertDonor",
            "in": "body",
            "description": "donor info for posting comment",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hujfsduif783ujh"
                },
                "comment": {
                  "type": "string",
                  "example": "Sample comment about donor"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Comment posted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "In case of successfully saving the comment"
          },
          "400": {
            "description": "In case of failure of saving the comment",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error, the user will get this message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/donors/comment": {
      "patch": {
        "tags": [
          "Donors"
        ],
        "description": "Adds a comment to a donor",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "editDonorComment",
            "in": "body",
            "description": "donor info for posting comment",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hujfsduif783ujh"
                },
                "comment": {
                  "type": "string",
                  "example": "Sample comment about donor"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Comment posted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "In case of successfully saving the comment"
          },
          "400": {
            "description": "In case of failure of saving the comment",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is trying to access or modify data of a different hall",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You are not authorized to access this donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "In case of internal server error, the user will get this message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donor/password/change": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Handles the changing of password for an account.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "changePassword",
            "in": "body",
            "description": "donor info for changing password",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "ghjdgejhd7623jhs"
                },
                "newPassword": {
                  "type": "string",
                  "example": "thisisanewpassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful password change done",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Password changed successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Target user does not have an account",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Target user does not have an account"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/donors/password": {
      "patch": {
        "tags": [
          "Donors"
        ],
        "description": "Handles the changing of password for an account.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "changePassword",
            "in": "body",
            "description": "donor info for changing password",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "ghjdgejhd7623jhs"
                },
                "newPassword": {
                  "type": "string",
                  "example": "thisisanewpassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful password change done",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Password changed successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Target user does not have an account",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Target user does not have an account"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/donor/edit": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Handles the update of donor information.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "editDonor",
            "in": "body",
            "description": "donor info for editing donor",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "ghjdgejhd7623jhs"
                },
                "newName": {
                  "type": "string",
                  "example": "Mir Mahathir Mohammad"
                },
                "newPhone": {
                  "type": "number",
                  "example": 8801521438557
                },
                "newStudentId": {
                  "type": "number",
                  "example": 1605011
                },
                "newBloodGroup": {
                  "type": "number",
                  "example": 2
                },
                "newHall": {
                  "type": "number",
                  "example": 3
                },
                "newRoomNumber": {
                  "type": "string",
                  "example": "3009"
                },
                "newAddress": {
                  "type": "string",
                  "example": "Azimpur"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donor info update successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donor updated successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Donor info update unsuccessful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "User is below the target donor by designation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "User does not have permission to edit"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/admin/donor/delete": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "handles the deletion of an existing donor from the database.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "deleteDonor",
            "in": "body",
            "description": "donor info for deleting donor",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hgjgkdse7823"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful donor deletion",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Donor deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This middleware is used to block the manipulation of data of a member with higher designation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "You cannot modify the details of a Badhan member with higher designation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Error occured when deleting target donor",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Error occurred in deleting target donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/admin/promote": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Handles the promotion or demotion of users.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promote",
            "in": "body",
            "description": "If the user wants to promote the target donor, promoteFlag should be true and a new password is needed to be set. If the target donor needs to be demoted, the promoteFlag should be false.",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hjasgd673278"
                },
                "promoteFlag": {
                  "type": "boolean",
                  "example": true
                },
                "newPassword": {
                  "type": "string",
                  "example": "thisisanewpassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Target user promoted/demoted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Donor promotion/ demotion successful"
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If user cannot promote volunteer or cannot demote donor",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Can not promote volunteer or can not demote donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/donors/designation": {
      "patch": {
        "tags": [
          "Donors"
        ],
        "description": "Handles the promotion or demotion of users.",
        "parameters": [
          {
            "name": "donorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "donorId\r",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promote",
            "in": "body",
            "description": "If the user wants to promote the target donor, promoteFlag should be true and a new password is needed to be set. If the target donor needs to be demoted, the promoteFlag should be false.",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hjasgd673278"
                },
                "promoteFlag": {
                  "type": "boolean",
                  "example": true
                },
                "newPassword": {
                  "type": "string",
                  "example": "thisisanewpassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Target user promoted/demoted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Donor promotion/ demotion successful"
          },
          "400": {
            "description": "When no donor with the specified donor id is found, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Query error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If user cannot promote volunteer or cannot demote donor",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Can not promote volunteer or can not demote donor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/admin/volunteers": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Handles the fetching of volunteer lists for a hall admin.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "An array of volunteers fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Volunteer list fetched successfully"
                },
                "volunteerList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "dskgjhwebkjsdbd"
                      },
                      "bloodGroup": {
                        "type": "number",
                        "example": 2
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "phone": {
                        "type": "number",
                        "example": 8801456987445
                      },
                      "roomNumber": {
                        "type": "string",
                        "example": "409"
                      },
                      "studentId": {
                        "type": "number",
                        "example": 1610000
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "The filter parameters are incorrect",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/volunteers": {
      "get": {
        "tags": [
          "Donors"
        ],
        "description": "Handles the fetching of volunteer lists for a hall admin.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "An array of volunteers fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Volunteer list fetched successfully"
                },
                "volunteerList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "dskgjhwebkjsdbd"
                      },
                      "bloodGroup": {
                        "type": "number",
                        "example": 2
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "phone": {
                        "type": "number",
                        "example": 8801456987445
                      },
                      "roomNumber": {
                        "type": "string",
                        "example": "409"
                      },
                      "studentId": {
                        "type": "number",
                        "example": 1610000
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "The filter parameters are incorrect",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/admin/volunteers/all": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "description": "Fetches all volunteers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Volunteer list fetch successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Volunteer list fetch successful"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Volunteer list fetch unsuccessful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/volunteers/all": {
      "get": {
        "tags": [
          "Donors"
        ],
        "description": "Fetches all volunteers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Volunteer list fetch successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Volunteer list fetch successful"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Volunteer list fetch unsuccessful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/admin/hall/change": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Promotes a volunteer to hall admin and demotes the existing hall admin to volunteer",
        "parameters": [
          {
            "name": "changeAdmin",
            "in": "body",
            "description": "donor info for changing admin",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hdjhd12vhjgj3428569834hth"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully changed hall admin",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully changed hall admin"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Previous hall admin demotion successful, but could not set new hall admin",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Demoted previous hall admin, but could not set new hall admin"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If fetched user is not a volunteer , user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "User is not a volunteer"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/admins": {
      "patch": {
        "tags": [
          "Donors"
        ],
        "description": "Promotes a volunteer to hall admin and demotes the existing hall admin to volunteer",
        "parameters": [
          {
            "name": "admin",
            "in": "body",
            "description": "donor info for changing admin",
            "schema": {
              "type": "object",
              "properties": {
                "donorId": {
                  "type": "string",
                  "example": "hdjhd12vhjgj3428569834hth"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully changed hall admin",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Successfully changed hall admin"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Previous hall admin demotion successful, but could not set new hall admin",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Demoted previous hall admin, but could not set new hall admin"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If fetched user is not a volunteer , user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "User is not a volunteer"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Donors"
        ],
        "description": "handles the fetching of hall admin list for a super admin.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Hall admin list fetch successful ",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Hall admin list fetched successfully"
                },
                "admins": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "reohrewoihgfsdn"
                      },
                      "hall": {
                        "type": "number",
                        "example": 0
                      },
                      "name": {
                        "type": "string",
                        "example": "Salman Khan"
                      },
                      "phone": {
                        "type": "number",
                        "example": 8801521478996
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "If user does not exists in database, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/admin/hall/show": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "handles the fetching of hall admin list for a super admin.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Hall admin list fetch successful ",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Hall admin list fetched successfully"
                },
                "admins": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "reohrewoihgfsdn"
                      },
                      "hall": {
                        "type": "number",
                        "example": 0
                      },
                      "name": {
                        "type": "string",
                        "example": "Salman Khan"
                      },
                      "phone": {
                        "type": "number",
                        "example": 8801521478996
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "If user does not exists in database, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "(Error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error message)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v3/log/version": {
      "get": {
        "tags": [
          "Logs"
        ],
        "description": "Get app info deployed to play store",
        "parameters": [],
        "responses": {
          "200": {
            "description": "response is the current version number of badhan api",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "example": "(App information fetched from google play store)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v2/version": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "description": "Get app info deployed to play store",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v2/log/statistics": {
      "get": {
        "tags": [
          "Logs"
        ],
        "description": "Fetch statistics about the current donor count and volunteer count",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Donation statistics fetch successful",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Statistics fetched successfully"
                },
                "statistics": {
                  "type": "object",
                  "properties": {
                    "donorCount": {
                      "type": "number",
                      "example": 2600
                    },
                    "donationCount": {
                      "type": "number",
                      "example": 1200
                    },
                    "volunteerCount": {
                      "type": "number",
                      "example": 130
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/v1/log": {
      "get": {
        "tags": [
          "Logs"
        ],
        "description": "The super admin sees all the activities done by the volunteers through this route",
        "parameters": [],
        "responses": {
          "201": {
            "description": "All logs fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "All logs fetched successfully"
                },
                "logs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "fdogirehognrebk"
                      },
                      "name": {
                        "type": "string",
                        "example": "Mit Majumder"
                      },
                      "hall": {
                        "type": "number",
                        "example": 2
                      },
                      "date": {
                        "type": "number",
                        "example": 1622090693113
                      },
                      "editedObject": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "60af292680015defd72"
                          },
                          "address": {
                            "type": "string",
                            "example": "Mohammadpur "
                          },
                          "bloodGroup": {
                            "type": "number",
                            "example": 2
                          },
                          "comment": {
                            "type": "string",
                            "example": "valid donor"
                          },
                          "designation": {
                            "type": "number",
                            "example": 0
                          },
                          "donationCount": {
                            "type": "number",
                            "example": 0
                          },
                          "hall": {
                            "type": "number",
                            "example": 8
                          },
                          "lastDonation": {
                            "type": "number",
                            "example": 1622073600000
                          },
                          "name": {
                            "type": "string",
                            "example": "Md. Rafat Hossain "
                          },
                          "phone": {
                            "type": "number",
                            "example": 8801521347889
                          },
                          "roomNumber": {
                            "type": "string",
                            "example": "TH-3012"
                          },
                          "studentId": {
                            "type": "number",
                            "example": 1516256
                          }
                        }
                      },
                      "operation": {
                        "type": "string",
                        "example": "EDIT COMMENT"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Logs"
        ],
        "description": "handles the deletion of logs.",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "All logs deleted successfully"
                },
                "logs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "fdogirehognrebk"
                      },
                      "name": {
                        "type": "string",
                        "example": "Mit Majumder"
                      },
                      "hall": {
                        "type": "number",
                        "example": 2
                      },
                      "date": {
                        "type": "number",
                        "example": 1622090693113
                      },
                      "editedObject": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "60af292680015defd72"
                          },
                          "address": {
                            "type": "string",
                            "example": "Mohammadpur"
                          },
                          "bloodGroup": {
                            "type": "number",
                            "example": 2
                          },
                          "comment": {
                            "type": "string",
                            "example": "This is a comment"
                          },
                          "designation": {
                            "type": "number",
                            "example": 0
                          },
                          "donationCount": {
                            "type": "number",
                            "example": 0
                          },
                          "hall": {
                            "type": "number",
                            "example": 8
                          },
                          "lastDonation": {
                            "type": "number",
                            "example": 1622073600000
                          },
                          "name": {
                            "type": "string",
                            "example": "Md. Rafat Hossain "
                          },
                          "phone": {
                            "type": "number",
                            "example": 8801521347889
                          },
                          "roomNumber": {
                            "type": "string",
                            "example": "TH-3012"
                          },
                          "studentId": {
                            "type": "number",
                            "example": 1516256
                          }
                        }
                      },
                      "operation": {
                        "type": "string",
                        "example": "EDIT COMMENT"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "All logs deleted successfully"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error, user will get this error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "(Internal server error)"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to login a user.",
        "parameters": [
          {
            "name": "signIn",
            "in": "body",
            "description": "Phone number of a logging user.",
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "8801521438557"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful sign in returns a token for the user",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "lksjaopirnboishbnoiwergnbsdiobhsiognkghesuiog"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "When the user provides an invalid password",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Incorrect phone / password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When the server malfunctions to the request body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "EXCEPTION"
                },
                "message": {
                  "type": "string",
                  "example": "message generated from the backend caused by runtime error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/signout": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Endpoint to logout a user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful sign out removes the token for the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Logged out successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to logout a user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful sign out removes the token for the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Logged out successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/signoutall": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Endpoint to logout user from all devices.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful sign out removes all the tokens of the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Logged out from all devices successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/signout/all": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to logout user from all devices.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful sign out removes all the tokens of the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Logged out from all devices successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/requestRedirection": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Endpoint to request a temporary redirection token",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Redirection token created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Redirection token created"
                },
                "token": {
                  "type": "string",
                  "example": "lksjaopirnboishbnoiwergnbsdiobhsiognkghesuiog"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/redirection": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to request a temporary redirection token",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Redirection token created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Redirection token created"
                },
                "token": {
                  "type": "string",
                  "example": "lksjaopirnboishbnoiwergnbsdiobhsiognkghesuiog"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "This error will occur if the user does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication failed. Invalid authentication token."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Route endpoint to redirect user from app to web.",
        "parameters": [
          {
            "name": "logIn",
            "in": "body",
            "description": "The temporary token generated by /user/requestRedirection",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "sdlfkhgoenguiehgfudsnbvsiugkb"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Redirection token created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Redirected login successful"
                },
                "token": {
                  "type": "string",
                  "example": "lksjaopirnboishbnoiwergnbsdiobhsiognkghesuiog"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If the token does not exist in database , the user might have logged out already.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "User has been logged out"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/redirectionSignIn": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "description": "Route endpoint to redirect user from app to web.",
        "parameters": [
          {
            "name": "logIn",
            "in": "body",
            "description": "The temporary token generated by /user/requestRedirection",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "sdlfkhgoenguiehgfudsnbvsiugkb"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Redirection token created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "message": {
                  "type": "string",
                  "example": "Redirected login successful"
                },
                "token": {
                  "type": "string",
                  "example": "lksjaopirnboishbnoiwergnbsdiobhsiognkghesuiog"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "If the token does not exist in database , the user might have logged out already.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "User has been logged out"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "In case of internal server error user will receive an error message",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Donors": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5e901d56effc5900177ced73"
        },
        "designation": {
          "type": "number",
          "example": 3
        },
        "lastDonation": {
          "type": "number",
          "example": 0
        },
        "donationCount": {
          "type": "number",
          "example": 0
        },
        "phone": {
          "type": "number",
          "example": 8801521438557
        },
        "bloodGroup": {
          "type": "number",
          "example": 2
        },
        "hall": {
          "type": "number",
          "example": 5
        },
        "name": {
          "type": "string",
          "example": "Mir Mahathir Mohammad"
        },
        "studentId": {
          "type": "string",
          "example": "1605011"
        },
        "address": {
          "type": "string",
          "example": "Azimpur road"
        },
        "roomNumber": {
          "type": "string",
          "example": ""
        },
        "comment": {
          "type": "string",
          "example": "Designer and developer of Badhan Web and App"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "608fc94c28599700175b31eb"
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTkwMWQ1NmVmZmM1OTAwM..."
              }
            }
          }
        },
        "password": {
          "type": "string",
          "example": "$2a$10$9B3aSkcw7n0/H.vQq5MMQeaeosyssb/VsjvLFydGQiTMYS89a9vkS"
        }
      }
    },
    "Donations": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5e6776166f73f925e22a0574"
        },
        "phone": {
          "type": "number",
          "example": 8801746027313
        },
        "date": {
          "type": "number",
          "example": 1514764800000
        },
        "donorId": {
          "type": "string",
          "example": "5e6776166f73f925e22a0574"
        }
      }
    }
  }
}